var alloc_next

func alloc(n)
    if alloc_next == 0
        alloc_next = 1024
    end

    var p = alloc_next
    alloc_next = alloc_next + n
    return p
end

func receive(buf)
    var p = 4
    *(p) = buf
    ecall()
end

func send(buf)
    var p = 4
    *(p) = buf
    ecall()
end


var TT_ILLEGAL
var TT_EOF
var TT_NEW_LINE
var TT_SPACE

var TT_IDENT
var TT_INT
var TT_STR

var TT_ADD
var TT_SUB
var TT_MUL
var TT_QUO
var TT_REM
var TT_AND
var TT_OR
var TT_XOR
var TT_SHL
var TT_STR
var TT_EQL
var TT_LSS
var TT_GTR
var TT_ASSIGN
var TT_NEQ
var TT_LEQ
var TT_GEQ

var TT_LPAREN
var TT_RPAREN
var TT_COMMA

var TT_WHILE
var TT_BREAK
var TT_CONTINUE
var TT_IF
var TT_ELSE
var TT_FUNC
var TT_RETURN
var TT_END
var TT_VAR

func init_token_types()
    TT_ILLEGAL = 0
    TT_EOF = 1
    TT_NEW_LINE = 2
    TT_SPACE = 3

    TT_IDENT = 4
    TT_INT = 5
    TT_STR = 6

    TT_ADD = 7
    TT_SUB = 8
    TT_MUL = 9
    TT_QUO = 10
    TT_REM = 11
    TT_AND = 12
    TT_OR = 13
    TT_XOR = 14
    TT_SHL = 15
    TT_STR = 16
    TT_EQL = 17
    TT_LSS = 18
    TT_GTR = 19
    TT_ASSIGN = 20
    TT_NEQ = 21
    TT_LEQ = 22
    TT_GEQ = 23

    TT_LPAREN = 24
    TT_RPAREN = 25
    TT_COMMA = 26

    TT_WHILE = 27
    TT_BREAK = 28
    TT_CONTINUE = 29
    TT_IF = 30
    TT_ELSE = 31
    TT_FUNC = 32
    TT_RETURN = 33
    TT_END = 34
    TT_VAR = 35
end

func main()
    var srccode = alloc(16777216)
    var bytecode = alloc(16777216)
    receive(srccode)

    init_token_types()

    send(bytecode)
end
